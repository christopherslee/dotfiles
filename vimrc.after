set nocompatible

set shell=/bin/bash
let g:solarized_termtrans=1
set background=dark
colorscheme molokai
set t_Co=256

set noswapfile
set nobackup
set nowb
set scrolloff=1000

set complete+=kspell

autocmd FileType gitcommit setlocal spell
autocmd FileType markdown setlocal spell

let g:ctrlp_clear_cache_on_exit=1 " clear the ctrl-p cache on exit
let g:ctrlp_max_height=30 " show 30 lines of results
let g:Powerline_symbols='fancy'

if has('gui_running')
  set guioptions-=T " remove toolbar
  set guioptions-=r " remove right scrollbar
  set guioptions-=L " remove left scrollbar
  set guifont=Inconsolata-dz\ for\ Powerline:h12
  if has('gui_macvim')
    set transparency=0  " Make window completely opaque
    colorscheme molokai " Use macvim optimized color scheme
  endif
  nnoremap <esc> :noh<cr><esc>
else
  " regular vim
  "Bubble single lines (kicks butt)
  "http://vimcasts.org/episodes/bubbling-text/
  nmap <C-Up> ddkP
  nmap <C-Down> ddp
  nmap <C-t> :CtrlP<CR>

  "Bubble multiple lines
  vmap <C-Up> xkP`[V`]
  vmap <C-Down> xp`[V`]

  hi TabLineFill ctermfg=Grey ctermbg=Black
  hi TabLine ctermfg=Blue ctermbg=Black
  hi TabLineSel ctermfg=Blue ctermbg=White
  hi Title ctermfg=Black
endif

set colorcolumn=120 " 120 char column marker
set laststatus=2 " required by powerline
set ignorecase " case insensitive search
filetype on

set wildmode=list:longest
set wildmenu
set wildignore+=*sass-cache/*
set wildignore+=*out/*
set wildignore+=*coverage/*
set wildignore+=*tools/*
set wildignore+=*spec/reports*
set wildignore+=*target/*
set wildignore+=doc/**
set wildignore+=META-INF/**
set wildignore+=*DS_Store*
set wildignore+=*log/*
set wildignore+=*tmp/*
set wildignore+=*.png,*.jpg,*.gif
set iskeyword-=_

" swap to last buffer
map <Leader>s :b#<CR>
" swap to alternate file
map <Leader>a :A<CR>

cnoremap %% <C-R>=expand("%:h").'/'<cr>

" command to convert ruby 1.8 hash syntax to 1.9 syntax
command! -bar -range=% NotRocket :<line1>,<line2>s/:\(\w\+\)\s*=>/\1:/ge

" Source the vimrc file after saving it. This way, you don't have to reload
" Vim to see the changes.
if has("autocmd")
  autocmd bufwritepost .vimrc.after source $MYVIMRC
endif
